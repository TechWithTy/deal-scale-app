{"version":3,"file":"react.js","names":[],"sources":["../../src/adapters/react.ts"],"sourcesContent":["import {\n  createContext,\n  createElement,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n  type ReactElement,\n  type ReactNode\n} from 'react'\nimport { debug } from '../lib/debug'\nimport { createEmitter } from '../lib/emitter'\nimport { renderQueryString } from '../lib/url-encoding'\nimport { createAdapterProvider, type AdapterProps } from './lib/context'\nimport type { AdapterInterface, AdapterOptions } from './lib/defs'\nimport { applyChange, filterSearchParams } from './lib/key-isolation'\nimport {\n  historyUpdateMarker,\n  patchHistory,\n  type SearchParamsSyncEmitterEvents\n} from './lib/patch-history'\n\nconst emitter = createEmitter<SearchParamsSyncEmitterEvents>()\n\nfunction generateUpdateUrlFn(fullPageNavigationOnShallowFalseUpdates: boolean) {\n  return function updateUrl(search: URLSearchParams, options: AdapterOptions) {\n    const url = new URL(location.href)\n    url.search = renderQueryString(search)\n    debug('[nuqs react] Updating url: %s', url)\n    if (fullPageNavigationOnShallowFalseUpdates && options.shallow === false) {\n      const method =\n        options.history === 'push' ? location.assign : location.replace\n      method.call(location, url)\n    } else {\n      const method =\n        options.history === 'push' ? history.pushState : history.replaceState\n      method.call(history, history.state, historyUpdateMarker, url)\n    }\n    emitter.emit('update', search)\n    if (options.scroll === true) {\n      window.scrollTo({ top: 0 })\n    }\n  }\n}\n\nconst NuqsReactAdapterContext = createContext({\n  fullPageNavigationOnShallowFalseUpdates: false\n})\n\nfunction useNuqsReactAdapter(watchKeys: string[]): AdapterInterface {\n  const { fullPageNavigationOnShallowFalseUpdates } = useContext(\n    NuqsReactAdapterContext\n  )\n  const [searchParams, setSearchParams] = useState(() => {\n    if (typeof location === 'undefined') {\n      return new URLSearchParams()\n    }\n    return filterSearchParams(\n      new URLSearchParams(location.search),\n      watchKeys,\n      false\n    )\n  })\n  useEffect(() => {\n    // Popstate event is only fired when the user navigates\n    // via the browser's back/forward buttons.\n    const onPopState = () => {\n      setSearchParams(\n        applyChange(new URLSearchParams(location.search), watchKeys, false)\n      )\n    }\n    const onEmitterUpdate = (search: URLSearchParams) => {\n      setSearchParams(applyChange(search, watchKeys, true))\n    }\n    emitter.on('update', onEmitterUpdate)\n    window.addEventListener('popstate', onPopState)\n    return () => {\n      emitter.off('update', onEmitterUpdate)\n      window.removeEventListener('popstate', onPopState)\n    }\n  }, [watchKeys.join('&')])\n  const updateUrl = useMemo(\n    () => generateUpdateUrlFn(fullPageNavigationOnShallowFalseUpdates),\n    [fullPageNavigationOnShallowFalseUpdates]\n  )\n  return {\n    searchParams,\n    updateUrl\n  }\n}\n\nconst NuqsReactAdapter = createAdapterProvider(useNuqsReactAdapter)\n\nexport function NuqsAdapter({\n  children,\n  fullPageNavigationOnShallowFalseUpdates = false,\n  ...adapterProps\n}: AdapterProps & {\n  children: ReactNode\n  fullPageNavigationOnShallowFalseUpdates?: boolean\n}): ReactElement {\n  return createElement(\n    NuqsReactAdapterContext.Provider,\n    { value: { fullPageNavigationOnShallowFalseUpdates } },\n    createElement(NuqsReactAdapter, { ...adapterProps, children })\n  )\n}\n\n/**\n * Opt-in to syncing shallow updates of the URL with the useOptimisticSearchParams hook.\n *\n * By default, the useOptimisticSearchParams hook will only react to internal nuqs updates.\n * If third party code updates the History API directly, use this function to\n * enable useOptimisticSearchParams to react to those changes.\n */\nexport function enableHistorySync(): void {\n  patchHistory(emitter, 'react')\n}\n"],"mappings":";;;;;;;;;;AAsBA,MAAM,UAAU;AAEhB,SAAS,oBAAoB,yCAAkD;AAC7E,QAAO,SAAS,UAAU,QAAyB,SAAyB;EAC1E,MAAM,MAAM,IAAI,IAAI,SAAS;AAC7B,MAAI,SAAS,kBAAkB;AAC/B,QAAM,iCAAiC;AACvC,MAAI,2CAA2C,QAAQ,YAAY,OAAO;GACxE,MAAM,SACJ,QAAQ,YAAY,SAAS,SAAS,SAAS,SAAS;AAC1D,UAAO,KAAK,UAAU;EACvB,OAAM;GACL,MAAM,SACJ,QAAQ,YAAY,SAAS,QAAQ,YAAY,QAAQ;AAC3D,UAAO,KAAK,SAAS,QAAQ,OAAO,qBAAqB;EAC1D;AACD,UAAQ,KAAK,UAAU;AACvB,MAAI,QAAQ,WAAW,KACrB,QAAO,SAAS,EAAE,KAAK,GAAG;CAE7B;AACF;AAED,MAAM,0BAA0B,cAAc,EAC5C,yCAAyC,OAC1C;AAED,SAAS,oBAAoB,WAAuC;CAClE,MAAM,EAAE,yCAAyC,GAAG,WAClD;CAEF,MAAM,CAAC,cAAc,gBAAgB,GAAG,eAAe;AACrD,MAAI,OAAO,aAAa,YACtB,QAAO,IAAI;AAEb,SAAO,mBACL,IAAI,gBAAgB,SAAS,SAC7B,WACA;CAEH;AACD,iBAAgB;EAGd,MAAM,mBAAmB;AACvB,mBACE,YAAY,IAAI,gBAAgB,SAAS,SAAS,WAAW;EAEhE;EACD,MAAM,mBAAmB,WAA4B;AACnD,mBAAgB,YAAY,QAAQ,WAAW;EAChD;AACD,UAAQ,GAAG,UAAU;AACrB,SAAO,iBAAiB,YAAY;AACpC,eAAa;AACX,WAAQ,IAAI,UAAU;AACtB,UAAO,oBAAoB,YAAY;EACxC;CACF,GAAE,CAAC,UAAU,KAAK,KAAK;CACxB,MAAM,YAAY,cACV,oBAAoB,0CAC1B,CAAC,wCAAwC;AAE3C,QAAO;EACL;EACA;EACD;AACF;AAED,MAAM,mBAAmB,sBAAsB;AAE/C,SAAgB,YAAY,EAC1B,UACA,0CAA0C,MAC1C,GAAG,cAIJ,EAAgB;AACf,QAAO,cACL,wBAAwB,UACxB,EAAE,OAAO,EAAE,yCAAyC,EAAE,EACtD,cAAc,kBAAkB;EAAE,GAAG;EAAc;EAAU;AAEhE;;;;;;;;AASD,SAAgB,oBAA0B;AACxC,cAAa,SAAS;AACvB"}